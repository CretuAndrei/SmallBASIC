dnl 
dnl "$Id: configure.in,v 1.1 2006-02-07 01:50:55 zeeb90au Exp $"
dnl 
dnl Configure script for SmallBASIC
dnl
dnl Copyright(C) 2001-2006 Chris Warren-Smith. Gawler, South Australia
dnl
dnl This program is distributed under the terms of the GPL v2.0
dnl Download the GNU Public License (GPL) from www.gnu.org
dnl

AC_INIT(configure.in)

AC_ARG_ENABLE(gtk,
  AC_HELP_STRING([--enable-gtk], [build gtk version(default=no)]),
  [ac_build_gtk="yes"],
  [ac_build_gtk="no"])

AC_ARG_ENABLE(fltk,
  AC_HELP_STRING([--enable-fltk], [build fltk version(default=no)]),
  [ac_build_fltk="yes"],
  [ac_build_fltk="no"])

dnl check build target
if test x$ac_build_gtk != xyes && test x$ac_build_fltk != xyes; then
  echo "Usage: configure [--enable-fltk | --enable-gtk]"
  exit 1
fi

AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE(smallbasic, 0.9.7)
AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE

dnl check for programs
AC_ISC_POSIX
AC_PROG_CXX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_PROG_RANLIB

function checkHeaderFiles() {
 AC_FUNC_ALLOCA
 AC_HEADER_DIRENT
 AC_HEADER_STDC
 AC_HEADER_SYS_WAIT
 AC_CHECK_HEADERS([arpa/inet.h fcntl.h limits.h locale.h malloc.h memory.h netdb.h netinet/in.h sgtty.h stddef.h stdint.h stdlib.h string.h strings.h sys/file.h sys/ioctl.h sys/param.h sys/socket.h sys/time.h termio.h termios.h unistd.h utime.h wchar.h wctype.h])
}

function buildGTK() {
  echo "building GTK version..."

  pkg_modules="gtk+-2.0 >= 2.0.0"
  PKG_CHECK_MODULES(PACKAGE, [$pkg_modules])
  win32=no
  case "${host_os}" in
    *mingw* | pw32* | cygwin*)
   	win32="yes"
    AC_CHECK_TOOL(WINDRES, windres, :)
    PACKAGE_CFLAGS="$PACKAGE_CFLAGS -mms-bitfields -mno-cygwin"
  esac
  AM_CONDITIONAL(WITH_WIN32, test x"$win32" = "xyes")
  AC_SUBST(PACKAGE_CFLAGS)
  AC_SUBST(PACKAGE_LIBS)

  dnl disable build for hildon
  AC_ARG_ENABLE(hildon,
    AC_HELP_STRING([--disable-hildon], [disable hildon build (default=no)]),
    [ac_hildon_build="no"],
    [ac_hildon_build="yes"])

  if test "x$ac_hildon_build" = "xyes"; then
     AC_DEFINE(USE_HILDON, 1, [Define if building for hildon/maemo/n770.])
  fi

  dnl preconfigured values for GTK build
  AC_DEFINE(_UnixOS, 1, [GTK version build flag.])
  AC_DEFINE(USE_TERM_IO, 0, [GTK version build flag.])
  AC_DEFINE(DEV_EVENTS_OSD, 1, [GTK version build flag.])
  AC_DEFINE(KBHIT_PWR_CONSERVE, 1, [GTK version build flag.])
  AC_DEFINE(DRV_SOUND, 1, [GTK version build flag.])

  BUILD_SUBDIRS="sync sync/gtk/src"
  AC_SUBST(BUILD_SUBDIRS)
}

function buildFLTK() {
  echo "building FLTK version... (TODO:fixme)"

  dnl Checks for FLTK 2.x
  AC_CHECK_PROG(have_fltk, fltk-config, [yes], [no])

  dnl do we HAVE the needed FLTK API VERSION ?
  HAVE_API_VERSION=no

  if test "${have_fltk}" = "yes" ; then
    FLTK_API_VERSION="`fltk-config --api-version`"
    if test "${FLTK_API_VERSION}" = "2.0" ; then
      HAVE_API_VERSION=yes
    fi
  fi

  if test "${HAVE_API_VERSION}" = "no" ; then
      AC_MSG_ERROR([
    You need FLTK version 2.* or 1.2.* installed with
    the program fltk-config in your PATH in order to build sbfltk
    See the FLTK homepage at http://www.fltk.org/. 
  
  configure failed.
  ])
  fi

  FLTK_CXXFLAGS="`fltk-config --cxxflags`"
  FLTK_LDFLAGS="`fltk-config --ldflags`"
  CXXFLAGS="$CXXFLAGS $FLTK_CXXFLAGS"
  LDFLAGS="$LDFLAGS $FLTK_LDFLAGS"

  dnl put FLTK_* in Makefiles
  AC_SUBST(FLTK_CXXFLAGS)
  AC_SUBST(FLTK_LDFLAGS)

  dnl check for --enable-debug
  OPTIM="-O"
  AC_SUBST(OPTIM)
  AC_ARG_ENABLE(debug, [  --enable-debug          turn on debugging [default=no]],
  if eval "test x$enable_debug = xyes"; then
    OPTIM="-g"
  else
    LDFLAGS="$LDFLAGS -s"
  fi)

  dnl preconfigured values for FLTK build
  AC_DEFINE(_UnixOS, 1, [GTK version build flag.])
  AC_DEFINE(USE_TERM_IO, 0, [GTK version build flag.])
  AC_DEFINE(DEV_EVENTS_OSD, 1, [GTK version build flag.])
  AC_DEFINE(KBHIT_PWR_CONSERVE, 1, [GTK version build flag.])
  AC_DEFINE(DRV_SOUND, 1, [GTK version build flag.])
  AC_DEFINE(FLTK, 1, [GTK version build flag.])

  BUILD_SUBDIRS="sync sync/ide-fltk"
  AC_SUBST(BUILD_SUBDIRS)
}

if test x$ac_build_gtk = xyes; then
  buildGTK
elif test x$ac_build_fltk = xyes; then
  buildFLTK
fi  

AC_OUTPUT([
  Makefile
  sync/Makefile
  sync/gtk/src/Makefile
  sync/ide-fltk/Makefile
])

dnl End of "$Id: configure.in,v 1.1 2006-02-07 01:50:55 zeeb90au Exp $".
