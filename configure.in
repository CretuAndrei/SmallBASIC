dnl 
dnl "$Id: configure.in,v 1.10 2006-02-13 12:25:58 zeeb90au Exp $"
dnl 
dnl Configure script for SmallBASIC
dnl
dnl Copyright(C) 2001-2006 Chris Warren-Smith. Gawler, South Australia
dnl
dnl This program is distributed under the terms of the GPL v2.0
dnl Download the GNU Public License (GPL) from www.gnu.org
dnl

AC_INIT(configure.in)

AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE(smallbasic, 0.9.7)
AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE

AC_PROG_CXX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_PROG_RANLIB

AC_ARG_ENABLE(gtk,
  AC_HELP_STRING([--enable-gtk], [build gtk version(default=no)]),
  [ac_build_gtk="yes"],
  [ac_build_gtk="no"])

AC_ARG_ENABLE(fltk,
  AC_HELP_STRING([--enable-fltk], [build fltk version(default=no)]),
  [ac_build_fltk="yes"],
  [ac_build_fltk="no"])

function checkHeaderFiles() {
   AC_FUNC_ALLOCA
   AC_HEADER_DIRENT
   AC_HEADER_STDC
   AC_HEADER_SYS_WAIT
   AC_CHECK_HEADERS([arpa/inet.h fcntl.h limits.h locale.h malloc.h memory.h netdb.h netinet/in.h sgtty.h stddef.h stdint.h stdlib.h string.h strings.h sys/file.h sys/ioctl.h sys/param.h sys/socket.h sys/time.h termio.h termios.h unistd.h utime.h wchar.h wctype.h])
}

function checkForWindows() {
   win32=no
   case "${host_os}" in
     *mingw* | pw32* | cygwin*)
    	win32="yes"
     AC_CHECK_TOOL(WINDRES, windres, :)
     PACKAGE_CFLAGS="$PACKAGE_CFLAGS -mms-bitfields -mno-cygwin"
   esac
   AM_CONDITIONAL(WITH_WIN32, test x"$win32" = "xyes")
}

function checkForDEBUG() {
   dnl check for --enable-debug
   AC_ARG_ENABLE(debug, [  --enable-debug          turn on debugging [default=no]],
   if test "x$enable_debug" = "xyes"; then
     LDFLAGS="-g -O0 $LDFLAGS"
   else
     LDFLAGS="-s -O2 -Os $LDFLAGS"
   fi)
}

function checkHILDON() {
   PKG_CHECK_MODULES(HILDON, hildon-libs >= 0.8.4)
   AC_SUBST(HILDON_LIBS)
   AC_SUBST(HILDON_CFLAGS)

   PKG_CHECK_MODULES(OSSO,libosso >= 0.8.4 gnome-vfs-2.0 >= 2.2 gnome-vfs-module-2.0 >= 2.2)
   AC_SUBST(OSSO_LIBS)
   AC_SUBST(OSSO_CFLAGS)

   PKG_CHECK_MODULES(OSSOSETTINGS, osso-af-settings >= 0.8.4)

   localedir=`$PKG_CONFIG osso-af-settings --variable=localedir`
   hildondesktopentrydir=`$PKG_CONFIG osso-af-settings --variable=desktopentrydir`
   hildoncpdesktopentrydir=`$PKG_CONFIG hildon-control-panel --variable plugindesktopentrydir`
   hildonstatusbarplugindir=`$PKG_CONFIG hildon-status-bar-lib --variable=pluginlibdir`
   hildoncplibdir=`$PKG_CONFIG hildon-control-panel --variable=pluginlibdir`
   hildoniconthemedir=$HOME/.icons/hicolor

   AC_SUBST(localedir)
   AC_SUBST(desktopentrydir)
   AC_SUBST(hildondesktopentrydir)
   AC_SUBST(hildoncpdesktopentrydir)
   AC_SUBST(hildonstatusbarplugindir)
   AC_SUBST(hildoncplibdir)
   AC_SUBST(hildoniconthemedir)

   PACKAGE_CFLAGS="${HILDON_CFLAGS} ${OSSO_CFLAGS}"
   PACKAGE_LIBS="${HILDON_LIBS} ${OSSO_LIBS}"
}

function buildGTK() {
   echo "Building GTK version..."
 
   checkForWindows
   checkForDEBUG 

   dnl disable build for hildon
   AC_ARG_ENABLE(hildon,
     AC_HELP_STRING([--disable-hildon], [disable hildon build (default=no)]),
     [ac_hildon_build="no"],
     [ac_hildon_build="yes"])
 
   if test "x$ac_hildon_build" = "xyes"; then
      AC_DEFINE(USE_HILDON, 1, [Define if building for hildon/maemo/n770.])
      checkHILDON
   else
      dnl check for gtk libraries
      pkg_modules="gtk+-2.0 >= 2.0.0"
      PKG_CHECK_MODULES(PACKAGE, [$pkg_modules])
   fi
 
   dnl preconfigured values for GTK build
   AC_DEFINE(_UnixOS, 1, [Building under Unix like systems.])
   AC_DEFINE(USE_TERM_IO, 0, [Uses terminal-io functions.])
   AC_DEFINE(DEV_EVENTS_OSD, 1, [dev_events() implemented using osd_events().])
   AC_DEFINE(KBHIT_PWR_CONSERVE, 1, [Conserve power in dev_kbhit()])
   AC_DEFINE(DRV_SOUND, 1, [Driver implements functions in drvsound.h])
   AC_DEFINE(IMPL_IMAGE, 1, [Driver implements image commands])
   AC_DEFINE(IMPL_DEV_GETS, 1, [Driver implements dev_gets()])
   AC_DEFINE(IMPL_DEV_DELAY, 1, [Driver implements dev_delay()])
 
   BUILD_SUBDIRS="sync sync/gtk/src"
   AC_SUBST(BUILD_SUBDIRS)
}

function buildFLTK() {
   echo "Building FLTK version..."
 
   checkForWindows
   checkForDEBUG
 
   dnl Checks for FLTK 2.x
   AC_CHECK_PROG(have_fltk, fltk-config, [yes], [no])
 
   dnl do we HAVE the needed FLTK API VERSION ?
   HAVE_API_VERSION=no
 
   if test "${have_fltk}" = "yes" ; then
     FLTK_API_VERSION="`fltk-config --api-version`"
     if test "${FLTK_API_VERSION}" = "2.0" ; then
       HAVE_API_VERSION=yes
     fi
   fi
 
   if test "${HAVE_API_VERSION}" = "no" ; then
       AC_MSG_ERROR([
     You need FLTK version 2.* installed with
     the program fltk-config in your PATH in order to build sbfltk
     See the FLTK homepage at http://www.fltk.org/. 
   
   configure failed.
   ])
   fi
 
   PACKAGE_CFLAGS="`fltk-config --cxxflags` -Wall -Wunused -fno-exceptions"
   PACKAGE_LIBS="`fltk-config --ldflags --use-images`"
 
   dnl preconfigured values for FLTK build
   AC_DEFINE(_UnixOS, 1, [Building under Unix like systems.])
   AC_DEFINE(_FLTK, 0, [Defined for FLTK build.])
   AC_DEFINE(USE_TERM_IO, 0, [Uses terminal-io functions.])
   AC_DEFINE(DEV_EVENTS_OSD, 1, [dev_events() implemented using osd_events().])
   AC_DEFINE(KBHIT_PWR_CONSERVE, 1, [Conserve power in dev_kbhit()])
   AC_DEFINE(IMPL_IMAGE, 1, [Driver implements image commands])
   AC_DEFINE(IMPL_HTML, 1, [Driver implements the html command])
   AC_DEFINE(IMPL_DEV_GETS, 1, [Driver implements dev_gets()])
 
   BUILD_SUBDIRS="sync sync/ide-fltk"
   AC_SUBST(BUILD_SUBDIRS)
}

function buildConsole {
   echo "Building Console version..."

   checkForWindows
   checkForDEBUG

   PACKAGE_CFLAGS="-O2 -Os -Wall"
   PACKAGE_LIBS="-lm -lgcc -lreadline -ltermcap -s"

   dnl preconfigured values for FLTK build
   AC_DEFINE(_UnixOS, 1, [Building under Unix like systems.])
   AC_DEFINE(_CygWin, 1, [Building a minimal dev_null based command-line version.])
   AC_DEFINE(USE_TERM_IO, 1, [Uses terminal-io functions.])
   AC_DEFINE(DEV_EVENTS_OSD, 0, [dev_events() implemented using osd_events().])

   BUILD_SUBDIRS="sync sync/cygwin"
   AC_SUBST(BUILD_SUBDIRS)
}

if test x$ac_build_gtk = xyes; then
   buildGTK
elif test x$ac_build_fltk = xyes; then
   buildFLTK
else
   buildConsole
fi  

AC_OUTPUT([
Makefile
sync/Makefile
sync/gtk/src/Makefile
sync/gtk/data/sbgtk.desktop
sync/gtk/data/com.nokia.sbgtk.service
sync/ide-fltk/Makefile
sync/cygwin/Makefile
])

dnl End of "$Id: configure.in,v 1.10 2006-02-13 12:25:58 zeeb90au Exp $".
