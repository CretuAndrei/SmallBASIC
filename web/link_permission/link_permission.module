<?php

/**
 * @file
 * Implements a permission to post forum messages containing a hyperlink.
 *
 * Based on the blockanonymouslinks module
 */

/**
 * Tests content for spam and takes appropriate action
 */
function block_spammer($user, $body) {
  $result = true;
  if ($user->uid && // logged in
      !user_access('post hyperlinks') && // not permitted
      (preg_match("@(http://|https://|ftp://|mailto:|smb://|afp://|file://|gopher://|news://|ssl://|sslv2://|sslv3://|tls://|tcp://|udp://)+@se", $body) || 
       preg_match("@(www\.[a-zA-Z0-9\@:%_+*~#?&=.,/;-]*[a-zA-Z0-9\@:%_+~#\&=/;-])+@se", $body))) {
    // perform block operation
    watchdog('action', 'Blocked spammer.', array('%name' => check_plain($user->name)));
    form_set_error('time', t('You are not permitted to post links. This is an anti-spam measure.'));
    $result = false;
  }
  return $result;
}

/**
 * Implementation of hook_perm().
 */
function link_permission_permission() {
  return array (
    'administer link permission' => array (
      'title' => t('Post Hyperlinks'), 
      'description' => t('Allow posting hyperlinks.'),
    ),
  );
}

/**
 * Implementation of hook_field_attach_validate
 * http://api.drupal.org/api/drupal/modules--field--field.attach.inc/function/field_attach_validate/7      
 */
function link_permission_field_attach_validate($entity_type, $entity, &$errors) {
  global $user;

  if ($entity_type == 'comment') {
    $text = $entity->comment_body[LANGUAGE_NONE][0]['value'];
    if (!block_spammer($user, $text)) {
      $errors = true;
    }
  }
}

/**
 * Implementation of hook_node_validate().
 * http://api.drupal.org/api/drupal/modules--node--node.api.php/function/hook_node_validate/7
 */
function link_permission_node_validate($node, $form, &$form_state) {
  global $user;
  $text = $node->body[$node->language][0]['value'];
  block_spammer($user, $text);
}
