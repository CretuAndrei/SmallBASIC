<?php

/**
 * @file
 * Download content from book page text within &lt;code&gt; tags
 */

/**
 * Implementation of hook_link().
 */
function export_code_node_view($node, $view_mode) {
  if ($node->type == 'book' && strpos($node->title, ".") !== false) {
    $text = $node->body[$node->language][0]['value'];
    if (strpos($text, "<code") !== false && strpos($text, "</code>") !== false) {
      $links['book_export_code'] = 
        array('title' => t('Download'), 
               'href' => 'book/export/code/'. $node->nid, 
         'attributes' => array('title' => t('Download ' . $node->title)),
               'html' => FALSE);
      $node->content['links']['blog'] = array(
        '#theme' => 'links',
        '#links' => $links,
        '#attributes' => array('class' => array('links', 'inline')),
      );
    }
  }
}

/**
 * menu handler
 *
 */
function book_export_code($nid) {
  return export_book_page($nid);
}

/**
 * main program entry
 *
 */
function export_book_page($nid) {
  $node = node_load($nid);
  $result = false;

  if ($node->body) {
    $content = $node->body[$node->language][0]['value'];

    // find text within code markup
    $code = strpos($content, "<code");
    if ($code !== false) {
      $code_begin = strpos($content, ">", $code);
      $code_end = strpos($content, "</code>", $code);
      if ($code_begin !== false && $code_end !== false) {
        $extn = strrpos($node->title, ".");
        drupal_add_http_header('Content-Type', 'text/' . 
                               strtolower(substr($node->title, $extn + 1)) . 
                              '; charset=utf-8');
        drupal_add_http_header('Content-Disposition', 'attachment; filename="' . 
                               $node->title . '"');
        $result = substr($content, $code_begin + 1, $code_end - $code_begin -1);
        $result = strip_tags($result);
      }
    }
  }

  if ($result === false) {
    drupal_set_message(t('No &lt;code&gt; found on this page.'));
    drupal_not_found();
  }

  return $result;
}

