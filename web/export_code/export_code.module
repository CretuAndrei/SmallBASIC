<?php

/**
 * @file
 * Download content from book page text within &lt;code&gt; tags
 */

/**
 * Adds the "Export Code" menu item
 */
function export_code_node_view($node, $view_mode) {
  if (user_access('export code')) {
    if ($node->type == 'book' && strpos($node->title, ".") !== false) {
      $text = $node->body[$node->language][0]['value'];
      if (strpos($text, "<code") !== false && strpos($text, "</code>") !== false) {
        $links['book_export_code'] = 
          array('title' => t('Download'), 
                 'href' => 'export/code/'. $node->nid, 
           'attributes' => array('title' => t('Download ' . $node->title)),
                 'html' => FALSE);
        $node->content['links']['blog'] = array(
          '#theme' => 'links',
          '#links' => $links,
          '#attributes' => array('class' => array('links', 'inline')),
        );
      }
    }
  }
}

/**
 * Setup the 'export code' permission
 */
function export_code_permission() {
  return array (
    'export code' => array (
      'title' => t('Download code'), 
      'description' => t('Allow code downloads.'),
    ),
  );
}

/**
 * Setup the menu
 */
function export_code_menu() {
  $items['export/code'] = array(
    'page callback' => 'export_code_main',
    'access arguments' => array('export code'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * main program entry
 */
function export_code_main($nid) {
  $node = node_load($nid);
  $result = MENU_NOT_FOUND;

  if ($node->body) {
    $content = $node->body[$node->language][0]['value'];

    // find text within code markup
    $code = strpos($content, "<code");
    if ($code !== false) {
      $code_begin = strpos($content, ">", $code);
      $code_end = strpos($content, "</code>", $code);
      if ($code_begin !== false && $code_end !== false) {
        $extn = strrpos($node->title, ".");
        drupal_add_http_header('Content-Type', 'text/' . 
                               strtolower(substr($node->title, $extn + 1)) . 
                              '; charset=utf-8');
        drupal_add_http_header('Content-Disposition', 'attachment; filename="' . 
                               $node->title . '"');
        $result = substr($content, $code_begin + 1, $code_end - $code_begin -1);
        echo $result;
        echo "\nREM Downloaded from http://smallbasic.sourceforge.net/?q=node/" . $nid;
        drupal_exit();
      }
    }
  }

  return $result;
}

